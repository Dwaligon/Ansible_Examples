---
- name: Install PGAudit 
  hosts: '{{ host }}'
  user: '{{ user }}'
  sudo: yes 
  tasks:
    - name: "Stop PostgreSQL Service"
      command: "systemctl stop postgresql-{{ pgsql_version }}"
    
    - name: "Add pgaudit Directory"
      file: 
        dest=/usr/pgsql-{{ pgsql_version }}/share/contrib/pgaudit
        state=directory
        owner=root
        group=root
        mode=0755

    - name: "Clone PGAudit"
      git: 
        repo=https://github.com/pgaudit/pgaudit.git 
        dest=/usr/pgsql-{{ pgsql_version }}/share/contrib/pgaudit
        update=no
      sudo: yes

    - name: "Install PGAudit"
      shell: "PATH=/usr/pgsql-{{ pgsql_version }}/bin:$PATH make USE_PGXS=1 install"
      args:
        chdir: /usr/pgsql-{{ pgsql_version }}/share/contrib/pgaudit

    - name: "Add pgaudit to shared_preload_libraries"
      lineinfile: 
        dest=/var/lib/pgsql/{{ pgsql_version }}/data/postgresql.conf 
        regexp="^shared_preload_libraries"
        line="shared_preload_libraries = 'pgaudit'"

    - name: "Add pgaudit to shared_preload_libraries"
      lineinfile: 
        dest=/var/lib/pgsql/{{ pgsql_version }}/data/postgresql.conf 
        regexp="^log_line_prefix"
        line="log_line_prefix = '%m %u %d '"

    - name: "Add pgaudit.conf to postgresql.conf"
      lineinfile: 
        dest=/var/lib/pgsql/{{ pgsql_version }}/data/postgresql.conf 
        line="include 'pgaudit.conf'"

    - name: "Add pgaudit.conf"
      file: 
        path=/var/lib/pgsql/{{ pgsql_version }}/data/pgaudit.conf 
        state=touch 
        owner=postgres
        group=postgres
        mode=0600

    - name: "Add pgaudit.conf Defaults"
      become_user: 'postgres'
      blockinfile:
          dest: /var/lib/pgsql/{{ pgsql_version }}/data/pgaudit.conf
          block: |
            # Enable catalog logging - default is 'on'
            pgaudit.log_catalog='on'
            # Specify the verbosity of log information (INFO, NOTICE, LOG, WARNING, DEBUG)
            pgaudit.log_level='log'
            # Log the parameters being passed
            pgaudit.log_parameter='on'
            # Log each relation (TABLE, VIEW, etc) mentioned in a SELECT or DML statement
            pgaudit.log_relation='off'
            # For every statement and substatement, log the statement and parameters every time
            pgaudit.log_statement_once='off'
            # Define the master role to use for object logging
            # pgaudit.role=''
            # Choose the statements to log: 
            # READ - SELECT, COPY
            # WRITE - INSERT, UPDATE, DELETE, TRUNCATE, COPY
            # FUNCTION - Function Calls and DO Blocks
            # ROLE - GRANT, REVOKE, CREATE/ALTER/DROP ROLE
            # DDL - All DDL not included in ROLE
            # MISC - DISCARD, FETCH, CHECKPOINT, VACUUM
            pgaudit.log='ddl, role, read'

    - name: "Start PostgreSQL Service"
      command: "systemctl start postgresql-{{ pgsql_version }}"
